---
- name: Login to Management Cluster
  ansible.builtin.command: oc login {{ api_server }} -u {{ user_name }} -p {{ password }} --insecure-skip-tls-verify=true

- name: Scale in  Nodepool
  ansible.builtin.command: oc -n {{ hypershift.hcp.clusters_namespace }} scale nodepool {{ hypershift.hcp.hosted_cluster_name }} --replicas 0

- name: Wait for Worker Nodes to Detach
  register: nodes
  until: nodes.resources | length == 0
  retries: 30
  delay: 10
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Node
    kubeconfig: /root/ansible_workdir/{{ hypershift.hcp.hosted_cluster_name }}-kubeconfig

- name: Wait for Agentmachines to delete
  register: agent_machines
  until: agent_machines.resources | length == 0
  retries: 30
  delay: 10
  kubernetes.core.k8s_info:
    api_version: capi-provider.agent-install.openshift.io/v1alpha1
    kind: AgentMachine

- name: Wait for Machines to delete
  register: machines
  until: machines.resources | length == 0
  retries: 30
  delay: 10
  kubernetes.core.k8s_info:
    api_version: cluster.x-k8s.io/v1beta1
    kind: Machine

- name: Get agent names
  register: agents_info
  ansible.builtin.command: oc get agents -n {{ hypershift.hcp.clusters_namespace }}-{{ hypershift.hcp.hosted_cluster_name }} --no-headers

- name: Create List for agents
  ansible.builtin.set_fact:
    agents: []

- name: Get a List of agents
  loop: "{{ range(hypershift.agents_parms.agents_count|int) | list }}"
  ansible.builtin.set_fact:
    agents: "{{ agents + [agents_info.stdout.split('\n')[item].split(' ')[0]] }}"

- name: Delete Agents
  loop: "{{ range(hypershift.agents_parms.agents_count|int) | list }}"
  ansible.builtin.command: oc delete agent {{ agents[item] }} -n {{ hypershift.hcp.clusters_namespace }}-{{ hypershift.hcp.hosted_cluster_name }}

- name: Remove workdir
  ansible.builtin.file:
    path: /root/ansible_workdir
    state: absent

- name: Delete InfraEnv resource
  kubernetes.core.k8s:
    state: absent
    api_version: agent-install.openshift.io/v1beta1
    kind: InfraEnv
    name: "{{ hypershift.hcp.hosted_cluster_name }}"
    namespace: "{{ hypershift.hcp.clusters_namespace }}-{{ hypershift.hcp.hosted_cluster_name }}"

- name: Destroy Hosted Control Plane
  ansible.builtin.command: hypershift destroy cluster agent --name {{ hypershift.hcp.hosted_cluster_name }} --namespace {{ hypershift.hcp.clusters_namespace }}

- name: Delete Clusters Namespace
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ hypershift.hcp.clusters_namespace }}"
    state: absent

- name: Delete AgentServiceConfig
  when: hypershift.mce.delete == true
  kubernetes.core.k8s:
    api_version: agent-install.openshift.io/v1beta1
    kind: AgentServiceConfig
    name: agent
    state: absent

- name: Delete Provisioning
  when: hypershift.mce.delete == true
  kubernetes.core.k8s:
    name: provisioning-configuration
    api_version: metal3.io/v1alpha1
    kind: Provisioning
    state: absent

- name: Delete ClusterImageSet
  when: hypershift.mce.delete == true
  kubernetes.core.k8s:
    name: img{{ hypershift.hcp.hosted_cluster_name }}-appsub
    api_version: hive.openshift.io/v1
    kind: ClusterImageSet
    state: absent

- name: Delete MCE Instance
  when: hypershift.mce.delete == true
  kubernetes.core.k8s:
    name: "{{ hypershift.mce.instance_name }}"
    namespace: "{{ hypershift.asc.mce_namespace }}"
    api_version: multicluster.openshift.io/v1
    kind: MultiClusterEngine
    state: absent
    wait: true
    wait_timeout: 400

- name: Delete MCE Subscription
  when: hypershift.mce.delete == true
  kubernetes.core.k8s:
    name: multicluster-engine
    namespace: "{{ hypershift.asc.mce_namespace }}"
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    state: absent

- name: Delete Operator Group - MCE
  when: hypershift.mce.delete == true
  kubernetes.core.k8s:
    name: multicluster-engine
    namespace: "{{ hypershift.asc.mce_namespace }}"
    api_version: operators.coreos.com/v1
    kind: OperatorGroup
    state: absent

- name: Delete MCE Namespace
  when: hypershift.mce.delete == true
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ hypershift.asc.mce_namespace }}"
    state: absent
