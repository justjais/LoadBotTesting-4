---
- name: install apache httpd
  ansible.builtin.package:
    name: httpd
    state: latest

- name: bind httpd to port 8080
  ansible.builtin.lineinfile:
    dest: /etc/httpd/conf/httpd.conf
    regexp: ^Listen 80
    line: Listen 8080

- name: bind https to port 8443
  ansible.builtin.lineinfile:
    dest: /etc/httpd/conf.d/ssl.conf
    regexp: ^Listen 443 https
    line: Listen 8443 https

- name: allow traffic at 8080 for apache
  tags: firewall
  with_items:
    - internal
    - public
  ansible.posix.firewalld:
    port: 8080/tcp
    zone: "{{ item }}"
    state: enabled
    permanent: true

- name: allow traffic at 8443 for apache
  tags: firewall
  with_items:
    - internal
    - public
  ansible.posix.firewalld:
    port: 8443/tcp
    zone: "{{ item }}"
    state: enabled
    permanent: true

- name: Download ipxe script
  register: ipxe_script
  ansible.builtin.shell: curl -k -L $(oc -n {{ hypershift.hcp.clusters_namespace }}-{{ hypershift.hcp.hosted_cluster_name }} get InfraEnv {{ hypershift.hcp.hosted_cluster_name
    }} -ojsonpath="{.status.bootArtifacts.ipxeScript}")

- name: Get URL for rootfs
  ansible.builtin.set_fact:
    rootfs_url: "{{ ipxe_script.stdout_lines[2].split(' ')[3].split('url=')[1] }}"

- name: Download rootfs.img
  ansible.builtin.get_url:
    url: "{{ rootfs_url }}"
    dest: /var/www/html/rootfs.img
    validate_certs: false

- name: restart httpd
  ansible.builtin.service:
    name: httpd.service
    state: started
    enabled: true

- name: Restart firewalld.service
  ansible.builtin.service:
    name: firewalld.service
    state: restarted
