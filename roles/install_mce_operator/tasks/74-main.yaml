---
- name: Check if multicluster-engine Namespace exists
  register: namespace_check
  ignore_errors: true
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Namespace
    name: "{{ hypershift.asc.mce_namespace }}"

- name: Create multicluster-engine  Namespace
  when: namespace_check.resources | length == 0
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ hypershift.asc.mce_namespace }}"
    state: present

- name: Create OperatorGroup.yaml
  ansible.builtin.template:
    src: OperatorGroup.yaml.j2
    dest: /root/ansible_workdir/OperatorGroup.yaml

- name: Deploy OperatorGroup
  ansible.builtin.command: oc apply -f /root/ansible_workdir/OperatorGroup.yaml

- name: Create Subscription.yaml
  ansible.builtin.template:
    src: Subscription.yaml.j2
    dest: /root/ansible_workdir/Subscription.yaml

- name: Deploy Subscription for MCE
  ansible.builtin.command: oc apply -f /root/ansible_workdir/Subscription.yaml

- name: Wait for MCE deployment to be created
  register: mce_deploy
  until: mce_deploy.stdout == '1'
  retries: 20
  delay: 5
  ansible.builtin.shell: oc get all -n {{ hypershift.asc.mce_namespace }} | grep -i  deployment | grep -i multicluster-engine | wc -l

- name: Wait for MCE deployment to be available
  register: mce_pod_status
  until: mce_pod_status.stdout.split(' ')[0] == mce_pod_status.stdout.split(' ')[1]
  retries: 20
  delay: 5
  ansible.builtin.shell: oc get deployment multicluster-engine-operator -n {{ hypershift.asc.mce_namespace }} -o=jsonpath='{.status.replicas}{" "}{.status.availableReplicas}'

- name: Create MultiClusterEngine.yaml
  ansible.builtin.template:
    src: MultiClusterEngine.yaml.j2
    dest: /root/ansible_workdir/MultiClusterEngine.yaml

- name: Deploy MCE Instance
  ansible.builtin.command: oc apply -f /root/ansible_workdir/MultiClusterEngine.yaml

- name: Wait for MCE to be Available
  register: mce_status
  until: mce_status.stdout == "Available"
  retries: 40
  delay: 10
  ansible.builtin.shell: oc get mce --no-headers | awk  '{print $2}'

- name: Enable hypershift-preview component in MCE
  ansible.builtin.command: oc patch mce {{ hypershift.mce.instance_name }} -p '{"spec":{"overrides":{"components":[{"name":"hypershift-preview","enabled":true}]}}}'
    --type merge

- name: Create ClusterImageSet.yaml
  ansible.builtin.template:
    src: ClusterImageSet.yaml.j2
    dest: /root/ansible_workdir/ClusterImageSet.yaml

- name: Deploy ClusterImageSet
  ansible.builtin.command: oc apply -f /root/ansible_workdir/ClusterImageSet.yaml

- name: Create Provisioning.yaml
  ansible.builtin.template:
    src: Provisioning.yaml.j2
    dest: /root/ansible_workdir/Provisioning.yaml

- name: Deploy Provisioning
  ansible.builtin.command: oc apply -f /root/ansible_workdir/Provisioning.yaml
