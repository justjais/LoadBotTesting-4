---
- hosts: localhost
  tags: localhost
  connection: local
  become: false
  gather_facts: true
  roles:
    - set_inventory

  post_tasks:
    - name: Ensure Ansible Galaxy collections have been installed.
      tags: galaxy
      loop: "{{ env.pkgs.galaxy }}"
      ansible.builtin.command: ansible-galaxy collection install {{ item }}

    - name: Find ibm_zhmc collection install location, if automated LPAR creation is to be used.
      tags: galaxy
      register: zhmc_path
      when: env.z.lpar1.create == True or env.z.lpar2.create == True or env.z.lpar3.create == True
      ansible.builtin.shell: ansible-galaxy collection list ibm.ibm_zhmc | grep -i ansible | cut -c 3-

    - name: Ensure zhmcclient requirements are installed.
      tags: galaxy
      when: env.z.lpar1.create == True or env.z.lpar2.create == True or env.z.lpar3.create == True
      ansible.builtin.pip:
        requirements: "{{ zhmc_path.stdout }}/ibm/ibm_zhmc/requirements.txt"
        executable: pip3
        extra_args: --upgrade

    - name: Check to make sure that the KVM host has a corresponding inventory host_vars file named with matching hostname and .yaml extension.
      tags: lpar_check
      when: env.z.lpar1.hostname is defined
      register: lpar_host_vars
      failed_when: lpar_host_vars.stat.exists == False
      ansible.builtin.stat:
        path: "{{ inventory_dir }}/host_vars/{{ env.z.lpar1.hostname }}.yaml"

    - name: Check to make sure the second KVM hosts have a corresponding inventory host_vars file named with matching hostname and .yaml extension, if defined.
      tags: lpar_check
      when: env.z.lpar2.hostname is defined
      register: lpar_host_vars
      failed_when: lpar_host_vars.stat.exists == False
      ansible.builtin.stat:
        path: "{{ inventory_dir }}/host_vars/{{ env.z.lpar2.hostname }}.yaml"

    - name: Check to make sure the third KVM hosts have a corresponding inventory host_vars file named with matching hostname and .yaml extension, if defined.
      tags: lpar_check
      when: env.z.lpar3.hostname is defined
      register: lpar_host_vars
      failed_when: lpar_host_vars.stat.exists == False
      ansible.builtin.stat:
        path: "{{ inventory_dir }}/host_vars/{{ env.z.lpar3.hostname }}.yaml"
